# Install and load required packages
if (!require("httr")) install.packages("httr")
if (!require("jsonlite")) install.packages("jsonlite")
if (!require("openxlsx")) install.packages("openxlsx")

library(httr)
library(jsonlite)
library(openxlsx)

# Set your Alpha Vantage API key
api_key <- "8NIAD65MWQFINSTH"
symbol <- "AAPL"

# Define API URLs
url_income <- paste0("https://www.alphavantage.co/query?function=INCOME_STATEMENT&symbol=", symbol, "&apikey=", api_key)
url_balance <- paste0("https://www.alphavantage.co/query?function=BALANCE_SHEET&symbol=", symbol, "&apikey=", api_key)
url_cash_flow <- paste0("https://www.alphavantage.co/query?function=CASH_FLOW&symbol=", symbol, "&apikey=", api_key)

# Fetch data
income_statement <- fromJSON(content(GET(url_income), as = "text"))
balance_sheet <- fromJSON(content(GET(url_balance), as = "text"))
cash_flow <- fromJSON(content(GET(url_cash_flow), as = "text"))

# Extract relevant data from API responses
income_statement_data <- as.data.frame(income_statement$annualReports)
balance_sheet_data <- as.data.frame(balance_sheet$annualReports)
cash_flow_data <- as.data.frame(cash_flow$annualReports)

# Create Excel workbook
wb <- createWorkbook()

# Add sheets and write data
addWorksheet(wb, "Income Statement")
writeData(wb, "Income Statement", income_statement_data)

addWorksheet(wb, "Balance Sheet")
writeData(wb, "Balance Sheet", balance_sheet_data)

addWorksheet(wb, "Cash Flow Statement")
writeData(wb, "Cash Flow Statement", cash_flow_data)

# Define the file path for Downloads folder
downloads_path <- file.path(Sys.getenv("USERPROFILE"), "Downloads", "financial_statements.xlsx")

# Save the Excel file in the Downloads folder
saveWorkbook(wb, file = downloads_path, overwrite = TRUE)

cat("Financial statements saved to your Downloads folder as 'financial_statements.xlsx'.\n")

# Install and load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("dplyr")) install.packages("dplyr")

library(readxl)
library(dplyr)

# Define the file path
file_path <- "financial_statements.xlsx"

# Sheet names that correspond to the statements
sheet_income <- "Income Statement"
sheet_balance <- "Balance Sheet"
sheet_cashflow <- "Cash Flow Statement"

# Function to clean and extract the last 3 years
clean_statement <- function(sheet_name, file_path) {
  # Read the sheet
  data <- read_excel(file_path, sheet = sheet_name)
  
  # Check if the fiscalDateEnding column exists and clean the data
  if ("fiscalDateEnding" %in% colnames(data)) {
    cleaned_data <- data %>%
      mutate(fiscalDateEnding = as.Date(fiscalDateEnding)) %>%  # Convert to Date
      arrange(desc(fiscalDateEnding)) %>%  # Sort by date
      slice(1:3)  # Select the last 3 years
    return(cleaned_data)
  } else {
    stop(paste("fiscalDateEnding column not found in", sheet_name))
  }
}

# Clean each statement
income_statement_cleaned <- clean_statement(sheet_income, file_path)
balance_sheet_cleaned <- clean_statement(sheet_balance, file_path)
cash_flow_cleaned <- clean_statement(sheet_cashflow, file_path)

# Display the cleaned tables
print("Income Statement (Last 3 Years):")
print(income_statement_cleaned)

print("Balance Sheet (Last 3 Years):")
print(balance_sheet_cleaned)

print("Cash Flow Statement (Last 3 Years):")
print(cash_flow_cleaned)

